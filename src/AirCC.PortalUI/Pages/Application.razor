@page "/application"
@using BCI.Extensions.DDD.ApplicationService;
@using BCI.Extensions.Core.Json;
@using AirCC.Portal.AppService.ApplicationDtos;
@using BCI.Extensions.Mvc.HttpClientJson
@inject HttpClient Http
@inject IJsonSerializer json
@inject NavigationManager NavManager
@using AirCC.PortalUI.Shared.Table

@if (result?.DataList == null)
{
    <p><em>Loading applications...</em></p>
}
else
{
    <Row>
        <Column ColumnSize="ColumnSize.Is12.OnMobile">
            <Inline>
                <Field>
                    <FieldLabel>Name</FieldLabel>
                </Field>
                <Field Margin="Margin.Is3.OnX.OnTablet">
                    <TextEdit Role="TextRole.Text" @bind-text="@Name" Placeholder="Application Name" />
                </Field>
                <Field>
                    <Button Color="Color.Primary" @onclick=@Search>Search</Button>
                </Field>
                <Field Margin="Margin.Is3.OnX.OnTablet" Float="Float.Right">
                    <Button Color="Color.Primary" @onclick="@(() => NavManager.NavigateTo("/application/create"))">Add Application</Button>
                </Field>
            </Inline>
        </Column>
    </Row>
    <br />
    <TableTemplate TableTitle="Applications" Items="result.DataList" TItem="ApplicationListOutput"
                   TotalCount=result.TotalCount TotalPages=result.TotalPages PageSize=" 10"
                   PageIndex=@result.CurrentIndex OnPaginationItemClick="@OnPageItemClicked">
        <TableHeaderContent>
            <TableHeaderCell>Name</TableHeaderCell>
            <TableHeaderCell>ClientSecret</TableHeaderCell>
            <TableHeaderCell>Operations</TableHeaderCell>
        </TableHeaderContent>
        <RowTemplate>
            <TableRowCell>@context.Name</TableRowCell>
            <TableRowCell>@context.ClientSecret</TableRowCell>
            <TableRowCell>
                <Icon Name="IconName.Edit" title="Edit"
                      @onclick="@(() => NavManager.NavigateTo("/application/update/" + context.Id))" />
                <Icon Name="IconName.Delete" title="Delete"
                      @onclick="@(() => Delete(context.Id))" />
            </TableRowCell>

        </RowTemplate>
    </TableTemplate>
}

@code {
    private PagedResultDto<ApplicationListOutput> result;
    public string Name { get; set; }

    protected override async Task OnInitializedAsync()
    {
        result = await Query();
    }

    private async Task Search()
    {
        result = await Query(Name);
    }

    private async Task OnPageItemClicked(int pageIndex)
    {
        result = await Query(Name, pageIndex);
    }

    private async Task Delete(string id)
    {
        await Http.DeleteAsync($"api/app/{id}");
        result = await Query();
    }

    private async Task<PagedResultDto<ApplicationListOutput>> Query(string name = "", int pageIndex = 1)
    {
        //var original = await Http.GetAsync($"api/app/pagedList?name={name}&pageIndex={pageIndex}");
        //return json.Deserialize<PagedResultDto<ApplicationListOutput>>(await original.Content.ReadAsStringAsync());

        return await Http.GetFromNewtonJsonAsync<PagedResultDto<ApplicationListOutput>>($"api/app/pagedList?name={name}&pageIndex={pageIndex}");

    }

}
