
<Pagination>
    <PaginationItem Disabled="@(1 == PageIndex)">
        <PaginationLink Page="first" Clicked="@PageItemClickEventCallback">
            <span aria-hidden="true">First</span>
        </PaginationLink>
    </PaginationItem>
    <PaginationItem Disabled="@(1 == PageIndex)">
        <PaginationLink Page="prev" Clicked="@PageItemClickEventCallback">
            <span aria-hidden="true">«</span>
        </PaginationLink>
    </PaginationItem>
    @for (int index = StartEndIndex.startIndex; index <= StartEndIndex.endIndex; index++)
    {
        var indexUsed = index;
        <PaginationItem Active="@(indexUsed == PageIndex)">
            <PaginationLink Page="@indexUsed.ToString()" Clicked="@PageItemClickEventCallback">
                @indexUsed
            </PaginationLink>
        </PaginationItem>
    }
    <PaginationItem Disabled="@(TotalPages == PageIndex)">
        <PaginationLink Page="next" Clicked="@PageItemClickEventCallback">
            <span aria-hidden="true">»</span>
        </PaginationLink>
    </PaginationItem>
    <PaginationItem Disabled="@(TotalPages == PageIndex)">
        <PaginationLink Page="last" Clicked="@PageItemClickEventCallback">
            <span aria-hidden="true">Last</span>
        </PaginationLink>
    </PaginationItem>
</Pagination>

@code {
    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public int PageSize { get; set; } = 10;

    [Parameter]
    public int TotalPages { get; set; }

    [Parameter]
    public int TotalCount { get; set; }

    [Parameter]
    public EventCallback<string> PageItemClickEventCallback { get; set; }

    private const int DisplayedPageCount = 10;

    private (int startIndex, int endIndex) StartEndIndex
    {
        get
        {
            var criterion = DisplayedPageCount / 2;
            if (TotalPages <= DisplayedPageCount)
                return (1, TotalPages);
            int start = 1;
            int end = 1;
            if (PageIndex < (criterion + 1))
            {
                start = 1;
                end = DisplayedPageCount;
            }
            else
            {
                start = PageIndex - criterion + 1;
                end = PageIndex + criterion;
            }

            if (end >= TotalPages)
                end = TotalPages;

            return (start, end);
        }
    }
}

